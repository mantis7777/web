{"version":3,"sources":["components/ListElement.js","pages/History.js","App.js","serviceWorker.js","index.js"],"names":["ListElement","state","kiekis","change","e","item","preventDefault","_this","props","handleChange","bind","Object","assertThisInitialized","id","target","value","_this2","this","itemsList","map","react_default","a","createElement","ListGroup_default","Item","key","Row_default","Col_default","style","fontSize","paddingBottom","sm","pavadinimas","Badge_default","objectSpread","centerText","marginLeft","width","variant","kaina","onChange","min","max","type","height","Component","position","top","transform","History","hist","axios","get","then","res","setState","data","marginRight","fontWeight","productName","bill","senderAccount","App","show","link","suma","paskirtis","shop","context","caclTotal","total","forEach","parseFloat","generateQR","handleClose","handleShow","QRCode","toDataURL","toFixed","url","catch","err","console","error","name","_this3","react_router_dom","Navbar_default","bg","marginBottom","Brand","to","textDecoration","color","Nav_default","className","react_router","exact","path","render","Modal_default","centered","onHide","Header","closeButton","Title","Body","Image_default","src","display","margin","Footer","Button_default","onClick","Jumbotron_default","fluid","marginTop","backgroundColor","Container_default","tekstoSpalva","shopBalance","tabIndex","minLength","maxLength","placeholder","p","Alert_default","Fragment","ListElement_ListElement","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c362265.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport Badge from 'react-bootstrap/Badge';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\n\r\nexport default class ListElement extends Component {\r\n  state = {\r\n    kiekis: '0'\r\n  };\r\n\r\n  change = (e, item) => {\r\n    e.preventDefault();\r\n    this.props.handleChange.bind(this, item.id, e.target.value);\r\n}\r\n\r\n  render() {\r\n    return this.props.itemsList.map(item => (\r\n      <ListGroup.Item key={item.id}>\r\n        <Row>\r\n          <Col style={{ fontSize: '15pt', paddingBottom: '10px' }} sm={2}>\r\n            {item.pavadinimas}\r\n          </Col>\r\n          <Col style={{ paddingBottom: '10px' }} sm={8}>\r\n            <Badge\r\n              style={{\r\n                ...centerText,\r\n                ...{ marginLeft: '120px', fontSize: '15pt', width: '100px' }\r\n              }}\r\n              variant=\"primary\"\r\n            >\r\n              {item.kaina + ' €'}\r\n            </Badge>\r\n          </Col>\r\n          <Col style={{ paddingBottom: '10px' }} sm={2}>\r\n            <input\r\n              onChange={(e) => {this.props.handleChange(this, item.id, e.target.value);}}\r\n              min=\"0\"\r\n              max=\"15\"\r\n              type=\"number\"\r\n              value={item.kiekis}\r\n              style={{ marginLeft: '40px', height: '100%', width: '45px' }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </ListGroup.Item>\r\n    ));\r\n  }\r\n}\r\n\r\nconst centerText = {\r\n  position: 'relative',\r\n  top: '50%',\r\n  transform: 'translateY(-50%)'\r\n};\r\n","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Badge from 'react-bootstrap/Badge';\r\n\r\nexport default class History extends Component {\r\n  state = {\r\n    hist: []\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get(\r\n        'https://mokju-api.azurewebsites.net/api/payments/shop/LT012345678901234568'\r\n      )\r\n      .then(res => this.setState({ hist: res.data }));\r\n  }\r\n\r\n  render() {\r\n    return this.state.hist.map(item => (\r\n      <ListGroup.Item key={item.id} style={{marginLeft: '2%', marginRight: '2%'}}>\r\n        <Row>\r\n          <Col sm={11} style={{ fontWeight: 'bold' }}>\r\n            {item.productName}\r\n          </Col>\r\n          <Col sm={0}>\r\n            <Badge variant=\"primary\">+{item.bill} €</Badge>\r\n          </Col>\r\n          <Col sm={8} style={{ fontSize: '10pt' }}>\r\n            {item.senderAccount}\r\n          </Col>\r\n        </Row>\r\n      </ListGroup.Item>\r\n    ));\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\r\nimport QRCode from 'qrcode';\r\nimport axios from 'axios';\r\nimport ListElement from './components/ListElement';\r\nimport History from './pages/History.js';\r\n\r\nimport Button from 'react-bootstrap/Button';\r\nimport Navbar from 'react-bootstrap/Navbar';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Alert from 'react-bootstrap/Alert';\r\nimport Image from 'react-bootstrap/Image';\r\nimport ListGroup from 'react-bootstrap/ListGroup';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    show: false,\r\n    link: 'https://linube.com/blog/wp-content/uploads/error-404.jpg',\r\n    suma: 0.1,\r\n    paskirtis: '',\r\n    shop: {},\r\n    itemsList: [\r\n      {\r\n        id: 0,\r\n        pavadinimas: 'Kebabas lavaše',\r\n        kaina: 2.25,\r\n        kiekis: '0'\r\n      },\r\n      {\r\n        id: 1,\r\n        pavadinimas: 'Kebabas lėkštėje',\r\n        kaina: 1.85,\r\n        kiekis: '0'\r\n      },\r\n      {\r\n        id: 2,\r\n        pavadinimas: 'Bulvinis kebabas',\r\n        kaina: 3.69,\r\n        kiekis: '0'\r\n      },\r\n      {\r\n        id: 3,\r\n        pavadinimas: 'Firminis kebabas',\r\n        kaina: 5.49,\r\n        kiekis: '0'\r\n      },\r\n      {\r\n        id: 4,\r\n        pavadinimas: 'Mėsainis',\r\n        kaina: 4.42,\r\n        kiekis: '0'\r\n      },\r\n      {\r\n        id: 5,\r\n        pavadinimas: 'Arbata',\r\n        kaina: 1.42,\r\n        kiekis: '0'\r\n      }\r\n    ]\r\n  };\r\n\r\n  handleChange = (context, id, value) => {\r\n    this.setState({\r\n      itemsList: this.state.itemsList.map(item => {\r\n        if (item.id === id) {\r\n          item.kiekis = value;\r\n        }\r\n        return item;\r\n      })\r\n    });\r\n  };\r\n\r\n  caclTotal = () => {\r\n    var total = 0.0;\r\n    this.state.itemsList.forEach(item => {\r\n      total += item.kaina * parseFloat(item.kiekis);\r\n    });\r\n    this.setState({ suma: total }, this.generateQR);\r\n  };\r\n\r\n  handleClose = () => {\r\n    this.setState({ show: false });\r\n  };\r\n\r\n  handleShow = () => {\r\n    if (this.state.suma !== 0.0) this.setState({ show: true });\r\n  };\r\n\r\n  generateQR = () => {\r\n    QRCode.toDataURL(this.state.paskirtis + '~' + this.state.suma.toFixed(2) + '~LT012345678901234568')\r\n      .then(url => {\r\n        this.setState({ link: url }, this.handleShow);\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    axios\r\n      .get('https://mokju-api.azurewebsites.net/api/shops/LT012345678901234568')\r\n      .then(res => this.setState({ shop: res.data, paskirtis: res.data.name }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <Navbar bg=\"dark\" variant=\"dark\" style={{ marginBottom: '2%' }}>\r\n          <Navbar.Brand>\r\n            <Link to=\"/\" style={{ textDecoration: 'none', color: '#fff' }}>\r\n              {this.state.shop.name}\r\n            </Link>\r\n          </Navbar.Brand>\r\n          <Nav className=\"mr-auto\">\r\n            <Link to=\"/\" style={{ textDecoration: 'none', color: '#96bdff' }}>\r\n              Pagrindinis\r\n            </Link>\r\n            <div style={{ width: '10px' }} />\r\n            <Link\r\n              to=\"/israsas\"\r\n              style={{ textDecoration: 'none', color: '#96bdff' }}\r\n            >\r\n              Išrašas\r\n            </Link>\r\n          </Nav>\r\n        </Navbar>\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={props => (\r\n            <div>\r\n              <Modal centered show={this.state.show} onHide={this.handleClose}>\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title>\r\n                    {this.state.paskirtis}: {this.state.suma.toFixed(2)} €\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <Image\r\n                    src={this.state.link}\r\n                    style={{\r\n                      display: 'flex',\r\n                      margin: 'auto',\r\n                      width: '200px',\r\n                      height: '200px'\r\n                    }}\r\n                  />\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button variant=\"primary\" onClick={this.handleClose}>\r\n                    Atlikta\r\n                  </Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n              <Jumbotron\r\n                fluid\r\n                style={{\r\n                  marginLeft: '10%',\r\n                  marginTop: '3%',\r\n                  marginRight: '10%',\r\n                  marginBottom: '3%',\r\n                  backgroundColor: '#5d0784'\r\n                }}\r\n              >\r\n                <Container>\r\n                  <p style={tekstoSpalva}>Sąskaita:</p>\r\n                  <h1 style={{ ...tekstoSpalva, fontWeight: 'bold' }}>\r\n                    {this.state.shop.shopBalance} €\r\n                  </h1>\r\n                    <input\r\n                      tabIndex=\"1\"\r\n                      minLength=\"1\"\r\n                      maxLength=\"30\"\r\n                      type=\"text\"\r\n                      placeholder=\"Mokėjimo paskirtis (pvz: Už kebabą)\"\r\n                      onChange={e => {\r\n                        var p =\r\n                          e.target.value === ''\r\n                            ? this.state.shop.name\r\n                            : e.target.value;\r\n                        this.setState({ paskirtis: p });\r\n                      }}\r\n                      style={{\r\n                        height: '100%',\r\n                        width: '40%',\r\n                        marginBottom: '20px'\r\n                      }}\r\n                    />\r\n                    <br />\r\n                    <Button\r\n                      tabIndex=\"2\"\r\n                      style={{ backgroundColor: 'green' }}\r\n                      onClick={this.caclTotal}\r\n                    >\r\n                      Pateikti mokėjimą\r\n                    </Button>\r\n                    {this.state.suma === 0.0 ? (\r\n                      <Alert\r\n                        variant=\"danger\"\r\n                        style={{ marginTop: '30px', width: '50%' }}\r\n                      >\r\n                        Pasirinkite bent 1 produktą!\r\n                      </Alert>\r\n                    ) : ( <React.Fragment/>\r\n                    )}\r\n                </Container>\r\n              </Jumbotron>\r\n              <ListGroup\r\n                style={{ margin: '2%', marginLeft: '10%', marginRight: '10%' }}\r\n              >\r\n                <ListElement\r\n                  handleChange={this.handleChange}\r\n                  itemsList={this.state.itemsList}\r\n                />\r\n              </ListGroup>\r\n            </div>\r\n          )}\r\n        />\r\n        <Route path=\"/israsas\" component={History} />\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nconst tekstoSpalva = {\r\n  color: '#e3efee'\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}